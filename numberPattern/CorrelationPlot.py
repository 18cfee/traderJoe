import matplotlib.pyplot as plt
import numpy as np

if __name__ == '__main__':
    # file = open("0-9Pattern0,2,4,6,8Ans","r")
    # trainingData = []
    # answerData = []
    # for i in range(10):
    #     trainingData.append([])

    # a = 0
    # for line in file:
    #     line = line.strip('\n')
    #     list = line.split(" ")
    #     i = 0
    #     if a < 4:
    #         for num in list:
    #             trainingData[i].append(num)
    #             i = i + 1
    #     else:
    #         for num in list:
    #             answerData.append(num)
    #     a = a + 1
    #
    # for entry in trainingData:
    #     print(entry)
    #
    # file.close()

    np.random.seed(19680801)

    N = 50
    x = range(N)
    for item in x:
        x[item] = item*2
    y = range(N)
    x[30] = 17
    print("co",np.corrcoef(x,y)[0][1])
    colors = np.random.rand(N)
    area = (30 * np.random.rand(N)) ** 2  # 0 to 15 point radii

    # plt.scatter(x, y, s=area, c=colors, alpha=0.5)
    # plt.show()
    plt.scatter(x, y,alpha=0.5)
    plt.show()
    #
    # plt.scatter(x, y, s=area, c=colors, alpha=0.8)
    # plt.show()

    predict = [2,3,4,4]

    x = [41.38, 41.35, 40.4, 44.45, 44.15, 44.1, 42.3, 40.37, 39.16, 39.45, 37.63, 39.88, 38.51, 41.4, 44.2, 40.0, 39.6,
     40.77, 35.52, 35.45, 32.82, 34.32, 35.15, 34.74, 33.23, 34.15, 35.45, 34.72, 36.53, 36.43, 35.87, 36.77, 36.45,
     36.5, 40.93, 41.26, 42.58, 41.65, 42.9, 44.52, 46.29, 45.24, 48.15, 49.4, 51.21, 51.01, 51.35, 63.26, 59.83, 57.0,
     57.0, 58.44, 59.23, 58.8, 64.61, 56.8, 58.21, 62.75, 59.52, 60.9, 63.4, 60.21, 62.65, 67.43, 68.05, 67.29, 70.69,
     76.42, 74.39, 72.23, 75.35, 80.3, 83.9, 84.5, 86.77, 86.54, 92.45, 91.46, 88.52, 94.61, 83.62, 88.77, 85.69, 92.25,
     88.09, 86.81, 81.82, 75.62, 74.37, 77.89, 78.42, 76.06, 67.0, 69.04, 68.64, 70.46, 70.6, 70.36, 69.45, 68.98,
     72.05, 74.49, 68.84, 65.77, 65.36, 66.94, 68.9, 57.33, 60.64, 58.75, 61.95, 66.72, 68.55, 73.16, 79.92, 85.87,
     84.82, 88.1, 83.28, 80.39, 80.82, 74.36, 72.76, 80.59, 78.42, 84.92, 87.45, 86.6, 85.96, 79.88, 85.44, 87.37,
     87.61, 91.79, 91.03, 88.07, 85.04, 90.69, 89.67, 90.13, 88.26, 91.95, 90.39, 93.93, 86.06, 89.45, 93.27, 100.49,
     92.85, 95.96, 98.49, 101.13, 100.53, 101.21, 101.98, 94.11, 94.99, 90.36, 92.42, 87.85, 88.34, 84.85, 88.67, 85.25,
     83.74, 81.67, 74.28, 73.4, 82.3, 81.42, 77.51, 76.66, 81.88, 84.07, 88.24, 90.0, 92.33, 88.08, 87.14, 86.84, 83.88,
     87.6, 85.04, 81.53, 83.26, 81.51, 80.94, 81.08, 79.83, 76.27, 81.3, 83.65, 82.45, 86.56, 78.16, 74.27, 77.91,
     80.81, 81.89, 81.64, 80.24, 85.35, 79.34]

    y = [0.7, 0.0, -0.1, 0.1, 0.0, 0.5, 0.4, -0.8, -1.0, -0.3, -0.2, -0.6, -1.2, -0.6, -0.3, -0.8, 0.0, -0.4, 0.1, 0.3, 0.8, 0.3, 0.4, -0.1, 0.1, 0.9, -0.1, 0.4, 0.4, 0.2, -0.5, 0.0, -0.2, 0.3, 1.0, 0.3, 0.7, 0.1, 1.3, 0.0, 1.1, 0.8, 1.8, 1.0, 0.0, 1.5, 1.2, 0.3, 1.4, 0.6, 0.6, 0.9, 0.1, 0.5, 0.4, 0.5, 0.3, 0.6, 1.2, 0.3, 1.0, 0.5, 1.3, 0.8, 0.7, 0.9, 1.1, 0.5, 1.1, -0.4, 0.3, 0.4, 0.6, 0.2, 0.4, 0.4, 0.1, 0.4, 0.8, 0.2, 1.2, 1.2, 1.4, 1.0, 0.2, 1.6, 0.6, 1.3, 0.9, -0.4, -1.4, -0.5, -1.2, -1.0, -1.9, -2.0, -1.4, -1.3, -1.5, -1.5, -1.2, -1.2, 0.4, 1.6, -0.4, 0.0, 0.3, 0.2, 0.5, 0.6, 1.2, 1.2, 1.7, 2.1, 0.7, 1.6, 0.8, 1.1, 1.1, 0.5, 2.0, 1.1, 0.7, 0.4, -0.8, 0.4, 1.4, 0.1, 1.4, 0.3, 0.7, 0.3, 0.5, 1.0, 0.5, 1.3, -0.1, 0.9, 0.1, 0.7, -0.3, 0.1, 0.2, -0.6, 0.2, 0.8, 0.5, 1.1, 0.9, 0.4, 0.5, 0.6, 0.9, 0.9, 0.3, 0.2, 0.7, 0.2, 0.5, 1.1, 0.2, 0.1, 0.6, 0.3, 0.1, 0.6, 0.6, -0.2, 0.2, 0.2, -0.2, -0.3, -0.2, -0.2, -0.6, 0.2, 0.7, 0.2, 0.3, -0.1, -0.1, 0.1, 1.0, 1.0, -0.2, 0.4, 0.1, -0.4, 0.6, 0.6, 0.6, 0.8, 0.1, 0.7, 0.6, 0.9, 0.8, 0.2, 0.1, 0.3, 0.1, 0.6, 0.9]

    np.corrcoef(x,y)[0][1]